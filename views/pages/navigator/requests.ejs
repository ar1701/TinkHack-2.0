<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Connection Requests - MedConnect</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <style>
      :root {
        --primary-blue: #2a5c82;
        --secondary-blue: #5c9baf;
        --accent-teal: #4ecdc4;
        --light-gray: #f8f9fa;
        --border-color: #dee2e6;
      }

      body {
        background-color: var(--light-gray);
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      }

      .dashboard-header {
        background: var(--primary-blue);
        color: white;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        position: sticky;
        top: 0;
        z-index: 1000;
      }

      .sidebar {
        background: white;
        min-height: calc(100vh - 60px);
        border-right: 1px solid var(--border-color);
        padding-top: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
      }

      .main-content {
        padding: 25px;
        background-color: var(--light-gray);
      }

      .nav-link {
        color: #333;
        padding: 0.8rem 1rem;
        border-radius: 0.5rem;
        margin: 0.3rem 0;
        transition: all 0.3s ease;
      }

      .nav-link.active {
        background-color: var(--accent-teal);
        color: white;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      }

      .nav-link:hover:not(.active) {
        background: rgba(76, 205, 196, 0.1);
        color: var(--accent-teal);
      }

      .page-title {
        color: var(--primary-blue);
        font-weight: 600;
        margin-bottom: 20px;
      }

      .card {
        border-radius: 15px;
        border: none;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
        margin-bottom: 20px;
      }

      .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
      }

      .request-card {
        background: white;
        border-radius: 15px;
      }

      .card-title {
        color: var(--primary-blue);
        font-weight: 600;
      }

      .patient-avatar {
        width: 60px;
        height: 60px;
        border-radius: 12px;
        background-color: var(--secondary-blue);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        margin-right: 20px;
      }

      .patient-info {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
      }

      .patient-name {
        font-weight: 600;
        font-size: 1.1rem;
        margin-bottom: 2px;
      }

      .patient-email {
        color: #6c757d;
        font-size: 0.9rem;
      }

      .request-message {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        font-style: italic;
        color: #495057;
        margin-bottom: 20px;
        position: relative;
      }

      .request-message::before {
        content: "\201C";
        font-size: 24px;
        position: absolute;
        top: 5px;
        left: 10px;
        color: #ced4da;
      }

      .request-message::after {
        content: "\201D";
        font-size: 24px;
        position: absolute;
        bottom: -5px;
        right: 10px;
        color: #ced4da;
      }

      .request-meta {
        display: flex;
        justify-content: space-between;
        font-size: 0.85rem;
        color: #6c757d;
        margin-bottom: 15px;
      }

      .request-actions {
        display: flex;
        gap: 10px;
      }

      .request-actions .btn {
        border-radius: 8px;
        padding: 8px 20px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
      }

      .btn-accept {
        background-color: var(--accent-teal);
        border-color: var(--accent-teal);
        color: white;
      }

      .btn-accept:hover {
        background-color: #3ab7af;
        border-color: #3ab7af;
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
      }

      .btn-reject {
        background-color: white;
        border-color: #dc3545;
        color: #dc3545;
      }

      .btn-reject:hover {
        background-color: #f8d7da;
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
      }

      .empty-state {
        text-align: center;
        padding: 40px 20px;
        color: #6c757d;
      }

      .empty-state i {
        font-size: 60px;
        color: #dee2e6;
        margin-bottom: 15px;
      }

      .loading-spinner {
        display: inline-block;
        width: 1.5rem;
        height: 1.5rem;
        border: 0.2rem solid #f3f3f3;
        border-top: 0.2rem solid var(--accent-teal);
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    </style>
  </head>
  <body>
    <div class="dashboard-header py-2">
      <div class="container-fluid">
        <div class="d-flex justify-content-between align-items-center">
          <div>
            <h1 class="h4 mb-0">
              <i class="fas fa-hospital me-2"></i>MedConnect
            </h1>
          </div>
          <div class="d-flex align-items-center">
            <div class="dropdown">
              <button
                class="btn btn-link text-white dropdown-toggle"
                type="button"
                id="userDropdown"
                data-bs-toggle="dropdown"
                aria-expanded="false"
              >
                <i class="fas fa-user-circle me-1"></i>
                <%= user.fullName %>
              </button>
              <ul
                class="dropdown-menu dropdown-menu-end shadow-sm"
                aria-labelledby="userDropdown"
              >
                <li>
                  <a class="dropdown-item" href="/profile">
                    <i class="fas fa-user me-2"></i>Profile
                  </a>
                </li>
                <li>
                  <a class="dropdown-item" href="/settings">
                    <i class="fas fa-cog me-2"></i>Settings
                  </a>
                </li>
                <li><hr class="dropdown-divider" /></li>
                <li>
                  <a class="dropdown-item" href="/logout">
                    <i class="fas fa-sign-out-alt me-2"></i>Logout
                  </a>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="container-fluid">
      <div class="row">
        <!-- Sidebar -->
        <div class="col-lg-2 col-md-3 sidebar">
          <ul class="nav flex-column">
            <li class="nav-item">
              <a class="nav-link" href="/navigator/dashboard">
                <i class="fas fa-tachometer-alt me-2"></i>Dashboard
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/navigator/profile">
                <i class="fas fa-user-circle me-2"></i>My Profile
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/navigator/patient-management">
                <i class="fas fa-users me-2"></i>Patients
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/navigator/appointments">
                <i class="fas fa-calendar-alt me-2"></i>Appointments
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/navigator/tasks">
                <i class="fas fa-tasks me-2"></i>Tasks
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/navigator/messages">
                <i class="fas fa-envelope me-2"></i>Messages
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link active" href="/navigator/requests">
                <i class="fas fa-user-plus me-2"></i>Requests
                <span
                  class="badge bg-danger ms-2"
                  id="requestBadge"
                  style="display: none"
                  >0</span
                >
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/navigator/reports">
                <i class="fas fa-chart-bar me-2"></i>Reports
              </a>
            </li>
          </ul>
        </div>

        <!-- Main Content -->
        <div class="col-lg-10 col-md-9 main-content">
          <h2 class="page-title">
            <i class="fas fa-user-plus me-2"></i>
            Connection Requests
          </h2>

          <div id="requestsContainer">
            <div class="text-center py-4">
              <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
              </div>
              <p class="mt-2 text-muted">Loading connection requests...</p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- JavaScript -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Load connection requests
        loadConnectionRequests();
      });

      // Load connection requests from API
      function loadConnectionRequests() {
        fetch("/api/navigator/connection-requests")
          .then((response) => response.json())
          .then((data) => {
            if (!data.success) {
              showErrorMessage("Error loading requests");
              return;
            }

            if (!data.requests || data.requests.length === 0) {
              showEmptyState();
              return;
            }

            // Update badge count
            const requestBadge = document.getElementById("requestBadge");
            requestBadge.textContent = data.requests.length;
            requestBadge.style.display = "inline-block";

            // Render requests
            renderRequests(data.requests);
          })
          .catch((error) => {
            console.error("Error loading requests:", error);
            showErrorMessage("Error loading requests");
          });
      }

      // Show error message
      function showErrorMessage(message) {
        const container = document.getElementById("requestsContainer");
        container.innerHTML = `
          <div class="alert alert-danger">
            ${message}
          </div>
        `;
      }

      // Show empty state when no requests
      function showEmptyState() {
        const container = document.getElementById("requestsContainer");
        container.innerHTML = `
          <div class="card">
            <div class="card-body empty-state">
              <i class="fas fa-user-plus"></i>
              <h4>No Connection Requests</h4>
              <p class="text-muted">You don't have any pending connection requests from patients</p>
            </div>
          </div>
        `;
      }

      // Render connection requests
      function renderRequests(requests) {
        const container = document.getElementById("requestsContainer");
        let html = "";

        requests.forEach((request) => {
          // Extract patient information
          const patient = request.patient;

          // Create initials for avatar
          const nameParts = patient.fullName.split(" ");
          const initials =
            nameParts.length > 1
              ? `${nameParts[0].charAt(0)}${nameParts[1].charAt(0)}`
              : patient.fullName.charAt(0);

          // Format date
          const requestDate = new Date(request.createdAt).toLocaleDateString(
            "en-US",
            {
              year: "numeric",
              month: "short",
              day: "numeric",
            }
          );

          html += `
            <div class="card request-card" id="request-${request._id}">
              <div class="card-body">
                <div class="patient-info">
                  <div class="patient-avatar">${initials}</div>
                  <div>
                    <h5 class="patient-name">${patient.fullName}</h5>
                    <div class="patient-email">${patient.email}</div>
                  </div>
                </div>
                
                <div class="request-message">
                  ${request.message}
                </div>
                
                <div class="request-meta">
                  <div>
                    <i class="fas fa-calendar-alt me-1"></i> Requested on ${requestDate}
                  </div>
                </div>
                
                <div class="request-actions">
                  <button class="btn btn-accept" onclick="handleRequest('${request._id}', 'accepted')">
                    <i class="fas fa-check me-1"></i> Accept
                  </button>
                  <button class="btn btn-reject" onclick="handleRequest('${request._id}', 'rejected')">
                    <i class="fas fa-times me-1"></i> Reject
                  </button>
                </div>
              </div>
            </div>
          `;
        });

        container.innerHTML = html;
      }

      // Handle accept/reject request
      function handleRequest(requestId, status) {
        // Get the card element
        const requestCard = document.getElementById(`request-${requestId}`);

        // Disable buttons
        const buttons = requestCard.querySelectorAll("button");
        buttons.forEach((button) => {
          button.disabled = true;
          button.innerHTML =
            '<span class="loading-spinner me-2"></span> Processing...';
        });

        // Send update request to server
        fetch(`/api/navigator/connection-requests/${requestId}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ status }),
        })
          .then((response) => response.json())
          .then((data) => {
            if (!data.success) {
              alert(data.message || "Error updating request");
              buttons.forEach((button) => (button.disabled = false));
              return;
            }

            // Show success message
            requestCard.innerHTML = `
              <div class="card-body">
                <div class="alert alert-${
                  status === "accepted" ? "success" : "info"
                } mb-0">
                  <i class="fas fa-${
                    status === "accepted" ? "check-circle" : "info-circle"
                  } me-2"></i>
                  Request ${
                    status === "accepted" ? "accepted" : "rejected"
                  } successfully
                </div>
              </div>
            `;

            // Remove request after 3 seconds
            setTimeout(() => {
              requestCard.style.opacity = "0";
              requestCard.style.height = "0";
              requestCard.style.margin = "0";
              requestCard.style.padding = "0";
              requestCard.style.transition = "all 0.5s ease";

              setTimeout(() => {
                requestCard.remove();

                // Check if there are no more requests
                const remainingRequests =
                  document.querySelectorAll(".request-card").length;

                if (remainingRequests === 0) {
                  showEmptyState();

                  // Update badge count
                  const requestBadge = document.getElementById("requestBadge");
                  requestBadge.style.display = "none";
                } else {
                  // Update badge count
                  const requestBadge = document.getElementById("requestBadge");
                  requestBadge.textContent = remainingRequests;
                }

                // If accepted, show notification about messaging
                if (status === "accepted") {
                  const notification = document.createElement("div");
                  notification.className =
                    "alert alert-success alert-dismissible fade show";
                  notification.innerHTML = `
                    <i class="fas fa-check-circle me-2"></i>
                    Connection accepted! You can now message this patient in the <a href="/navigator/messages">Messages</a> section.
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                  `;
                  document.querySelector(".main-content").prepend(notification);
                }
              }, 500);
            }, 3000);
          })
          .catch((error) => {
            console.error("Error updating request:", error);
            alert("An error occurred. Please try again.");
            buttons.forEach((button) => (button.disabled = false));
          });
      }
    </script>
  </body>
</html>
