<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Navigator - MedConnect</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <link href="/css/patient-theme.css" rel="stylesheet" />
    <style>
      .dashboard-header {
        background: var(--primary-blue);
        color: white;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 1030;
        height: 60px;
      }

      .sidebar {
        background: #f8f9fa;
        position: fixed;
        left: 0;
        top: 60px;
        bottom: 0;
        width: 250px;
        border-right: 1px solid #dee2e6;
        overflow-y: auto;
        z-index: 1020;
        padding: 20px 0;
      }

      .main-content {
        margin-left: 250px;
        margin-top: 60px;
        padding: 30px;
        min-height: calc(100vh - 60px);
      }

      .nav-link {
        color: #333;
        padding: 0.8rem 1.5rem;
        margin: 0.2rem 1rem;
        border-radius: 8px;
        transition: all 0.3s ease;
      }

      .nav-link:hover {
        background: var(--accent-teal);
        color: white !important;
      }

      .nav-link.active {
        background: var(--primary-blue);
        color: white !important;
      }

      .navigator-card {
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
        overflow: hidden;
        height: 100%;
      }

      .navigator-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
      }

      .navigator-card .card-header {
        background-color: var(--primary-blue);
        color: white;
        padding: 15px;
        border-bottom: none;
      }

      .certified-badge {
        background-color: #28a745;
        color: white;
        font-size: 0.7rem;
        padding: 3px 8px;
        border-radius: 20px;
        margin-left: 8px;
        display: inline-block;
      }

      .not-certified-badge {
        background-color: #ffc107;
        color: #212529;
        font-size: 0.7rem;
        padding: 3px 8px;
        border-radius: 20px;
        margin-left: 8px;
        display: inline-block;
      }

      .navigator-details {
        padding: 0;
        list-style: none;
      }

      .navigator-details li {
        padding: 8px 0;
        border-bottom: 1px solid #eee;
      }

      .navigator-details li:last-child {
        border-bottom: none;
      }

      .detail-label {
        font-weight: 600;
        color: #555;
        min-width: 120px;
        display: inline-block;
      }

      .specialty-tag {
        background-color: #e9ecef;
        color: #495057;
        font-size: 0.8rem;
        padding: 5px 10px;
        border-radius: 20px;
        margin-right: 5px;
        margin-bottom: 5px;
        display: inline-block;
      }

      .language-tag {
        background-color: #d1ecf1;
        color: #0c5460;
        font-size: 0.8rem;
        padding: 5px 10px;
        border-radius: 20px;
        margin-right: 5px;
        margin-bottom: 5px;
        display: inline-block;
      }

      .status-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 0.7rem;
        padding: 3px 8px;
        border-radius: 20px;
        z-index: 10;
      }

      .status-requested {
        background-color: #ffc107;
        color: #212529;
      }

      .status-accepted {
        background-color: #28a745;
        color: white;
      }

      #navigatorDetail .modal-header {
        background-color: var(--primary-blue);
        color: white;
      }

      .btn-connect {
        background-color: var(--accent-teal);
        border-color: var(--accent-teal);
      }

      .btn-connect:hover {
        background-color: #3da8a0;
        border-color: #3da8a0;
      }

      .my-navigators-header {
        border-bottom: 2px solid var(--primary-blue);
        padding-bottom: 10px;
        margin-bottom: 20px;
      }

      .filter-section {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
      }
    </style>
  </head>
  <body>
    <!-- Fixed Header -->
    <header class="dashboard-header py-2">
      <div class="container-fluid">
        <div class="d-flex justify-content-between align-items-center">
          <div class="d-flex align-items-center logo">
            <i class="fas fa-hospital"></i>
            <h4 class="mb-0">MedConnect</h4>
          </div>
          <div class="d-flex align-items-center">
            <span class="me-3 user-welcome"
              ><i class="fas fa-user-circle me-2"></i>Welcome, <%= user.fullName
              %></span
            >
            <a href="/logout" class="btn btn-logout">Logout</a>
          </div>
        </div>
      </div>
    </header>

    <!-- Fixed Sidebar -->
    <div class="sidebar">
      <nav class="nav flex-column">
        <a
          href="/patient/dashboard"
          class="nav-link <%= locals.path === '/patient/dashboard' ? 'active' : '' %>"
        >
          <i class="fas fa-home"></i> Dashboard
        </a>
        <a
          href="/patient/appointments"
          class="nav-link <%= locals.path === '/patient/appointments' ? 'active' : '' %>"
        >
          <i class="fas fa-calendar"></i> Appointments
        </a>
        <a
          href="/patient/medical-records"
          class="nav-link <%= locals.path === '/patient/medical-records' ? 'active' : '' %>"
        >
          <i class="fas fa-file-medical"></i> Medical Records
        </a>
        <a
          href="/patient/messages"
          class="nav-link <%= locals.path === '/patient/messages' ? 'active' : '' %>"
        >
          <i class="fas fa-comments"></i> Messages
        </a>
        <a
          href="/patient/navigator"
          class="nav-link <%= locals.path === '/patient/navigator' ? 'active' : '' %>"
        >
          <i class="fas fa-user-md"></i> My Navigator
        </a>
      </nav>
    </div>

    <!-- Main Content -->
    <main class="main-content">
      <div class="container-fluid">
        <!-- My Active Navigators Section -->
        <div class="row mb-4">
          <div class="col-12">
            <h4 class="my-navigators-header">
              <i class="fas fa-users me-2"></i> My Navigators
            </h4>
            <div id="activeNavigators">
              <div class="text-center py-4">
                <div class="spinner-border text-primary" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2 text-muted">Loading your navigators...</p>
              </div>
            </div>
          </div>
        </div>

        <!-- Find Navigators Section -->
        <div class="row mb-4">
          <div class="col-12">
            <h4 class="my-navigators-header">
              <i class="fas fa-search me-2"></i> Find Patient Navigators
            </h4>

            <!-- Filters -->
            <div class="filter-section mb-4">
              <div class="row">
                <div class="col-md-3 mb-3">
                  <label for="navigatorTypeFilter" class="form-label"
                    >Navigator Type</label
                  >
                  <select id="navigatorTypeFilter" class="form-select">
                    <option value="">All Types</option>
                    <option value="Clinical Navigator">
                      Clinical Navigator
                    </option>
                    <option value="Nurse">Nurse</option>
                    <option value="Health Practitioner">
                      Health Practitioner
                    </option>
                    <option value="Community Health Worker">
                      Community Health Worker
                    </option>
                    <option value="Medicaid - Financial/Insurance Assistance">
                      Medicaid/Insurance Specialist
                    </option>
                    <option value="Social Worker">Social Worker</option>
                    <option value="Cancer Survivor">Cancer Survivor</option>
                    <option value="Caregiver">Caregiver</option>
                  </select>
                </div>
                <div class="col-md-3 mb-3">
                  <label for="locationFilter" class="form-label"
                    >Location</label
                  >
                  <input
                    type="text"
                    id="locationFilter"
                    class="form-control"
                    placeholder="Enter location"
                  />
                </div>
                <div class="col-md-3 mb-3">
                  <label for="languageFilter" class="form-label"
                    >Language</label
                  >
                  <input
                    type="text"
                    id="languageFilter"
                    class="form-control"
                    placeholder="Enter language"
                  />
                </div>
                <div class="col-md-3 mb-3">
                  <label for="certificationFilter" class="form-label"
                    >Certification</label
                  >
                  <select id="certificationFilter" class="form-select">
                    <option value="">All</option>
                    <option value="Certified">Certified Only</option>
                  </select>
                </div>
              </div>
              <div class="row">
                <div class="col-12">
                  <button id="applyFilters" class="btn btn-primary">
                    <i class="fas fa-filter me-1"></i> Apply Filters
                  </button>
                  <button
                    id="resetFilters"
                    class="btn btn-outline-secondary ms-2"
                  >
                    <i class="fas fa-undo me-1"></i> Reset
                  </button>
                </div>
              </div>
            </div>

            <!-- Navigators List -->
            <div id="navigatorsList" class="row">
              <div class="text-center py-4">
                <div class="spinner-border text-primary" role="status">
                  <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2 text-muted">Loading navigators...</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>

    <!-- Navigator Detail Modal -->
    <div
      class="modal fade"
      id="navigatorDetailModal"
      tabindex="-1"
      aria-labelledby="navigatorDetailModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="navigatorDetailModalLabel">
              Navigator Profile
            </h5>
            <button
              type="button"
              class="btn-close btn-close-white"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body" id="navigatorDetailContent">
            <div class="text-center py-4">
              <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
              </div>
              <p class="mt-2 text-muted">Loading navigator details...</p>
            </div>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button
              type="button"
              class="btn btn-primary btn-connect"
              id="requestConnectionBtn"
            >
              Request Connection
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Connection Request Modal -->
    <div
      class="modal fade"
      id="connectionRequestModal"
      tabindex="-1"
      aria-labelledby="connectionRequestModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="connectionRequestModalLabel">
              Send Connection Request
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="connectionRequestForm">
              <input type="hidden" id="navigatorProfileId" />
              <div class="mb-3">
                <label for="requestMessage" class="form-label">Message</label>
                <textarea
                  class="form-control"
                  id="requestMessage"
                  rows="4"
                  placeholder="Introduce yourself and explain why you'd like to connect with this navigator..."
                ></textarea>
                <div class="form-text">
                  This message will be sent to the navigator with your request.
                </div>
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button
              type="button"
              class="btn btn-primary"
              id="sendRequestBtn"
              onclick="sendConnectionRequest()"
            >
              Send Request
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- JavaScript -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Load active navigators and pending requests
        loadActiveNavigators();
        loadPendingRequests();

        // Set up event listeners
        document
          .getElementById("applyFilters")
          .addEventListener("click", loadNavigators);
        document
          .getElementById("resetFilters")
          .addEventListener("click", resetFilters);
        document
          .getElementById("requestConnectionBtn")
          .addEventListener("click", openConnectionRequestModal);
        document
          .getElementById("sendRequestBtn")
          .addEventListener("click", sendConnectionRequest);
      });

      // Keep track of navigators that have pending requests
      let pendingRequests = new Map();

      // Load active navigator connections
      function loadActiveNavigators() {
        fetch("/api/patient/active-navigators")
          .then((response) => response.json())
          .then((data) => {
            const container = document.getElementById("activeNavigators");

            if (!data.success) {
              container.innerHTML = `<div class="alert alert-danger">${data.message}</div>`;
              return;
            }

            if (data.connections && data.connections.length > 0) {
              let html = '<div class="row">';

              data.connections.forEach((connection) => {
                const navigator = connection.navigator;
                const profile = connection.navigatorProfile;

                html += `
                <div class="col-md-6 col-lg-4 mb-4">
                  <div class="card navigator-card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                      <h5 class="mb-0">${navigator.fullName}</h5>
                      <span class="status-badge status-accepted">Connected</span>
                    </div>
                    <div class="card-body">
                      <p><span class="detail-label">Type:</span> ${
                        profile.navigatorType
                      }</p>
                      <p><span class="detail-label">Location:</span> ${
                        profile.location
                      }</p>
                      <p><span class="detail-label">Experience:</span> ${
                        profile.yearsOfExperience
                      } years</p>
                      <p>
                        <span class="detail-label">Certified:</span> 
                        ${
                          profile.certificationStatus === "Certified"
                            ? '<span class="certified-badge">Yes</span>'
                            : '<span class="not-certified-badge">No</span>'
                        }
                      </p>
                      <p class="mt-3 mb-0"><strong>Connected since:</strong> ${new Date(
                        connection.updatedAt
                      ).toLocaleDateString()}</p>
                    </div>
                  </div>
                </div>
                `;
              });

              html += "</div>";
              container.innerHTML = html;
            } else {
              container.innerHTML = `
                <div class="text-center py-4">
                  <img src="https://img.icons8.com/color/96/000000/user-network.png" width="80" class="mb-3">
                  <h5>You don't have any active navigators yet</h5>
                  <p class="text-muted">Connect with a patient navigator to get personalized assistance with your healthcare journey.</p>
                </div>
              `;
            }
          })
          .catch((error) => {
            console.error("Error loading active navigators:", error);
            document.getElementById("activeNavigators").innerHTML = `
              <div class="alert alert-danger">
                Error loading your navigators. Please try again later.
              </div>
            `;
          });
      }

      // Check pending requests
      function loadPendingRequests() {
        fetch("/api/patient/navigator-requests")
          .then((response) => response.json())
          .then((data) => {
            if (data.success && data.requests) {
              // Store pending requests by navigator profile ID
              data.requests.forEach((request) => {
                if (request.status === "pending") {
                  pendingRequests.set(request.navigatorProfile._id, request);
                }
              });
            }

            // After loading pending requests, load navigators list
            loadNavigators();
          })
          .catch((error) => {
            console.error("Error loading pending requests:", error);
            // Load navigators anyway
            loadNavigators();
          });
      }

      // Load all navigators with optional filters
      function loadNavigators() {
        const navigatorType = document.getElementById(
          "navigatorTypeFilter"
        ).value;
        const location = document.getElementById("locationFilter").value;
        const language = document.getElementById("languageFilter").value;
        const certification = document.getElementById(
          "certificationFilter"
        ).value;

        // Show loading state
        document.getElementById("navigatorsList").innerHTML = `
          <div class="text-center py-4">
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2 text-muted">Loading navigators...</p>
          </div>
        `;

        fetch("/api/navigators")
          .then((response) => response.json())
          .then((data) => {
            if (!data.success) {
              document.getElementById("navigatorsList").innerHTML = `
                <div class="alert alert-danger">${data.message}</div>
              `;
              return;
            }

            let navigators = data.navigators;

            // Apply filters
            if (navigatorType) {
              navigators = navigators.filter(
                (nav) => nav.navigatorType === navigatorType
              );
            }

            if (location) {
              const locationLower = location.toLowerCase();
              navigators = navigators.filter((nav) =>
                nav.location.toLowerCase().includes(locationLower)
              );
            }

            if (language) {
              const languageLower = language.toLowerCase();
              navigators = navigators.filter((nav) =>
                nav.languages.some((lang) =>
                  lang.toLowerCase().includes(languageLower)
                )
              );
            }

            if (certification === "Certified") {
              navigators = navigators.filter(
                (nav) => nav.certificationStatus === "Certified"
              );
            }

            // Render navigators
            renderNavigators(navigators);
          })
          .catch((error) => {
            console.error("Error loading navigators:", error);
            document.getElementById("navigatorsList").innerHTML = `
              <div class="alert alert-danger">
                Error loading navigators. Please try again later.
              </div>
            `;
          });
      }

      function renderNavigators(navigators) {
        const container = document.getElementById("navigatorsList");

        if (navigators.length === 0) {
          container.innerHTML = `
            <div class="col-12">
              <div class="alert alert-info">
                No navigators found matching your criteria. Try adjusting your filters.
              </div>
            </div>
          `;
          return;
        }

        let html = "";

        navigators.forEach((navigator) => {
          const certified = navigator.certificationStatus === "Certified";
          const profileId = navigator._id;
          const isPending = pendingRequests.has(profileId);

          html += `
            <div class="col-md-6 col-lg-4 mb-4">
              <div class="card navigator-card">
                ${
                  isPending
                    ? '<span class="status-badge status-requested">Request Sent</span>'
                    : ""
                }
                <div class="card-header">
                  <h5 class="mb-0">
                    ${navigator.user.fullName}
                    ${
                      certified
                        ? '<span class="certified-badge">Certified</span>'
                        : '<span class="not-certified-badge">Not Certified</span>'
                    }
                  </h5>
                </div>
                <div class="card-body">
                  <ul class="navigator-details">
                    <li><span class="detail-label">Type:</span> ${
                      navigator.navigatorType
                    }</li>
                    <li><span class="detail-label">Location:</span> ${
                      navigator.location
                    }</li>
                    <li><span class="detail-label">Experience:</span> ${
                      navigator.yearsOfExperience
                    } years</li>
                    <li>
                      <span class="detail-label">Languages:</span>
                      <div class="mt-1">
                        ${navigator.languages
                          .map(
                            (lang) =>
                              `<span class="language-tag">${lang}</span>`
                          )
                          .join("")}
                      </div>
                    </li>
                  </ul>
                  <div class="text-center mt-3">
                    <button class="btn btn-primary view-profile" data-navigator-id="${
                      navigator._id
                    }">
                      View Profile
                    </button>
                  </div>
                </div>
              </div>
            </div>
          `;
        });

        container.innerHTML = `<div class="row">${html}</div>`;

        // Add event listeners to view profile buttons
        document.querySelectorAll(".view-profile").forEach((button) => {
          button.addEventListener("click", function () {
            const navigatorId = this.getAttribute("data-navigator-id");
            openNavigatorDetail(navigatorId);
          });
        });
      }

      function openNavigatorDetail(navigatorId) {
        // Show modal with loading state
        const modal = new bootstrap.Modal(
          document.getElementById("navigatorDetailModal")
        );
        modal.show();

        // Load navigator details
        fetch(`/api/navigators/${navigatorId}`)
          .then((response) => response.json())
          .then((data) => {
            if (!data.success) {
              document.getElementById("navigatorDetailContent").innerHTML = `
                <div class="alert alert-danger">${data.message}</div>
              `;
              return;
            }

            const navigator = data.navigator;
            const certified = navigator.certificationStatus === "Certified";

            // Store navigator ID for connection request
            document.getElementById("navigatorProfileId").value = navigator._id;

            // Format specialties and languages
            const specialtiesHtml =
              navigator.specialties && navigator.specialties.length > 0
                ? navigator.specialties
                    .map((spec) => `<span class="specialty-tag">${spec}</span>`)
                    .join("")
                : "<em>None specified</em>";

            const languagesHtml = navigator.languages
              .map((lang) => `<span class="language-tag">${lang}</span>`)
              .join("");

            // Render navigator details
            document.getElementById("navigatorDetailContent").innerHTML = `
              <div class="row">
                <div class="col-md-12">
                  <h4 class="mb-1">
                    ${navigator.user.fullName}
                    ${
                      certified
                        ? '<span class="certified-badge">Certified</span>'
                        : '<span class="not-certified-badge">Not Certified</span>'
                    }
                  </h4>
                  <p class="text-muted mb-3">${navigator.navigatorType}</p>
                  
                  <h5 class="mt-4 mb-2">About</h5>
                  <p>${navigator.bio || "No bio provided."}</p>
                  
                  <div class="row mt-4">
                    <div class="col-md-6">
                      <h5 class="mb-2">Details</h5>
                      <ul class="list-group">
                        <li class="list-group-item"><strong>Location:</strong> ${
                          navigator.location
                        }</li>
                        <li class="list-group-item"><strong>Experience:</strong> ${
                          navigator.yearsOfExperience
                        } years</li>
                        <li class="list-group-item">
                          <strong>Languages:</strong>
                          <div class="mt-1">${languagesHtml}</div>
                        </li>
                      </ul>
                    </div>
                    <div class="col-md-6">
                      <h5 class="mb-2">Specialties</h5>
                      <div class="p-3 border rounded">${specialtiesHtml}</div>
                    </div>
                  </div>
                </div>
              </div>
            `;
          })
          .catch((error) => {
            console.error("Error loading navigator details:", error);
            document.getElementById("navigatorDetailContent").innerHTML = `
              <div class="alert alert-danger">
                Error loading navigator details. Please try again later.
              </div>
            `;
          });
      }

      function openConnectionRequestModal() {
        // Close the detail modal
        bootstrap.Modal.getInstance(
          document.getElementById("navigatorDetailModal")
        ).hide();

        // Show the connection request modal
        const modal = new bootstrap.Modal(
          document.getElementById("connectionRequestModal")
        );
        modal.show();
      }

      function sendConnectionRequest() {
        const navigatorProfileId =
          document.getElementById("navigatorProfileId").value;
        const message = document.getElementById("requestMessage").value.trim();

        // Disable button and show loading state
        const button = document.getElementById("sendRequestBtn");
        const originalText = button.innerHTML;
        button.disabled = true;
        button.innerHTML =
          '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Sending...';

        // Send request
        fetch("/api/navigators/request", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            navigatorProfileId,
            message,
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            // Hide modal
            bootstrap.Modal.getInstance(
              document.getElementById("connectionRequestModal")
            ).hide();

            if (data.success) {
              // Show success alert
              const alertDiv = document.createElement("div");
              alertDiv.className =
                "alert alert-success alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-4";
              alertDiv.setAttribute("role", "alert");
              alertDiv.style.zIndex = "9999";
              alertDiv.innerHTML = `
                <strong>Success!</strong> ${data.message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              `;
              document.body.appendChild(alertDiv);

              // Remove alert after 5 seconds
              setTimeout(() => {
                alertDiv.remove();
              }, 5000);

              // Reload active navigators (in case this was an immediate accept)
              loadActiveNavigators();
            } else {
              // Show error
              alert(data.message || "Error sending request. Please try again.");
            }
          })
          .catch((error) => {
            console.error("Error sending connection request:", error);
            alert("Error sending request. Please try again later.");
          })
          .finally(() => {
            // Reset button
            button.disabled = false;
            button.innerHTML = originalText;
          });
      }

      function resetFilters() {
        document.getElementById("navigatorTypeFilter").value = "";
        document.getElementById("locationFilter").value = "";
        document.getElementById("languageFilter").value = "";
        document.getElementById("certificationFilter").value = "";

        loadNavigators();
      }
    </script>
  </body>
</html>
